name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  NODE_VERSION: 18

jobs:
  ci:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Permissão para criar tags e releases
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Necessário para criar tags corretamente

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Build application
        run: npm run build

      - name: Save build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: ./dist

      - name: Generate tag for release
        run: |
          TAG_NAME="v$(date +%Y%m%d%H%M%S)"
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          git config --global user.email "fonsomagic@gmail.com"
          git config --global user.name "Affonso Pereira"
          git tag $TAG_NAME
          git push origin $TAG_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          files: ./dist/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cd:
    needs: ci
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Deploy to test environment
        run: |
          echo "Deploying application..."
          # Comandos reais de deploy seriam usados aqui

      - name: Notify on failure
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.example.com
          server_port: 587
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          subject: "CI/CD Pipeline Failed"
          to: developer@example.com
          body: "A etapa do pipeline falhou. Verifique os logs."

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies for custom action
        run: |
          cd .github/actions/linter
          npm install
          npm install --save-dev @types/node eslint@9.22.0
          npm run build
          cd -

      - name: Debug ESLint Config
        run: |
          ls -l .github/actions/linter/
          cat .github/actions/linter/eslint.config.js

      - name: Run custom TypeScript linter action
        uses: ./.github/actions/linter